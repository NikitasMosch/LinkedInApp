spring.application.name=Backend-v1.0
spring.datasource.url=jdbc:mysql://localhost:3306/LinkedDB?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=12345tennis

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop 
spring.jpa.properties.hibernate.format_sql=true
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver  

spring.main.allow-circular-references=true

# These maybe not needed, if images are stored as URLS (paths):
# Maximum size for uploaded files
spring.servlet.multipart.max-file-size=10MB
# Maximum size for a request (including all files and data)
spring.servlet.multipart.max-request-size=10MB

# SSL/TLS:
# Command to generate a self-signed certificate (keystore.p12):
#keytool -genkeypair -alias myapp -keyalg RSA -keysize 2048 -storetype PKCS12 -keystore keystore.p12 -validity 3650
# Command to export the certificate (cert.pem) -> needed for the frontend:
#keytool -exportcert -rfc -keystore keystore.p12 -alias myapp -file cert.pem
# Command to export the private key (key.pem), executed via git bash -> needed for the frontend:
#openssl pkcs12 -in keystore.p12 -nocerts -out key.pem -nodes
# Command for the frontend to run:
#ng serve --ssl --ssl-cert src/ssl/cert.pem --ssl-key src/ssl/key.pem
server.port=8443
server.ssl.key-store=classpath:certificates/keystore.p12
server.ssl.key-store-password=123456
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=myapp
